{"version":3,"sources":["img/userpic.jpg","Components/Contact.js","Components/ContactsTable.js","Components/DynamicCitiesSelect.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","fab","faEye","faEyeSlash","Contact","this","props","contacts","map","contact","className","singleContact","id","onClick","OnContactClick","showName","name","surname","showCity","city","showEmail","isActive","icon","email","showPhone","phone","Component","faCheck","faBars","faArrowDown","ContactsTable","state","showTableMenu","showCard","toggleName","bind","toggleCity","toggleEmail","togglePhone","toggleTableMenu","handleContactClick","event","target","checked","setState","singleContactId","getAttribute","console","log","parentElement","fetchOneContact","axios","get","mode","then","data","filter","catch","error","image","require","type","OnSortByName","defaultChecked","onChange","src","default","alt","href","DynamicCitiesSelect","onChangeCity","value","length","App","loading","undefined","filteredContacts","handleSubmit","fetchContacts","sortByName","document","title","matchState","preventDefault","elements","toLowerCase","showActive","includes","sort","a","b","localeCompare","onSubmit","placeholder","selectedCity","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba646f60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userpic.a2e113e8.jpg\";","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(fab, faEye, faEyeSlash)\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      this.props.contacts.map((contact) => {\r\n        return <tr className={this.props.singleContact.id === contact.id ? \"row-selected\" : null} key={contact.id} onClick={this.props.OnContactClick}>\r\n          {this.props.showName && <td className=\"table-column-name\" data-id={contact.id}>{contact.name} {contact.surname}</td>}\r\n          {this.props.showCity && <td className=\"table-column-city\" data-id={contact.id}>{contact.city}</td>}\r\n          {this.props.showEmail && <td className=\"table-column-email\" data-id={contact.id}>\r\n            {contact.isActive && <FontAwesomeIcon className=\"fa-eye\" icon=\"eye\" />}\r\n            {!contact.isActive && <FontAwesomeIcon className=\"fa-eye-slash\" icon=\"eye-slash\" />}\r\n            {contact.email}\r\n          </td>}\r\n          {this.props.showPhone && <td className=\"table-column-phone\" data-id={contact.id}>{contact.phone}</td>}\r\n        </tr>\r\n      })\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Contact from './Contact'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCheck, faBars, faArrowDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(fab, faCheck, faBars, faArrowDown)\r\n\r\nclass ContactsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: true,\r\n      city: true,\r\n      email: true,\r\n      phone: true,\r\n      showTableMenu: false,\r\n      showCard: false,\r\n      singleContact: {}\r\n    }\r\n    this.toggleName = this.toggleName.bind(this);\r\n    this.toggleCity = this.toggleCity.bind(this);\r\n    this.toggleEmail = this.toggleEmail.bind(this);\r\n    this.togglePhone = this.togglePhone.bind(this);\r\n    this.toggleTableMenu = this.toggleTableMenu.bind(this);\r\n    this.handleContactClick = this.handleContactClick.bind(this);\r\n  }\r\n\r\n  toggleName(event) {\r\n    if (!event.target.checked) {\r\n      this.setState({ name: false })\r\n    } else {\r\n      this.setState({ name: true })\r\n    }\r\n  }\r\n\r\n  toggleCity(event) {\r\n    if (!event.target.checked) {\r\n      this.setState({ city: false })\r\n    } else {\r\n      this.setState({ city: true })\r\n    }\r\n  }\r\n\r\n  toggleEmail(event) {\r\n    if (!event.target.checked) {\r\n      this.setState({ email: false })\r\n    } else {\r\n      this.setState({ email: true })\r\n    }\r\n  }\r\n\r\n  togglePhone(event) {\r\n    if (!event.target.checked) {\r\n      this.setState({ phone: false })\r\n    } else {\r\n      this.setState({ phone: true })\r\n    }\r\n  }\r\n\r\n  toggleTableMenu(event) {\r\n    if (event.target.checked) {\r\n      this.setState({ showTableMenu: true })\r\n    } else {\r\n      this.setState({ showTableMenu: false })\r\n    }\r\n  }\r\n\r\n  handleContactClick(event) {\r\n    let singleContactId = event.target.getAttribute('data-id');\r\n    console.log(event.target.parentElement);\r\n    if (this.state.showCard && singleContactId === this.state.singleContact.id) {\r\n      this.setState({ showCard: false })\r\n    } else {\r\n      this.setState({ showCard: true })\r\n      this.fetchOneContact(singleContactId);\r\n    }\r\n  }\r\n\r\n  fetchOneContact(id) {\r\n    const URL = \"https://contactify-api.herokuapp.com/api/contacts\";\r\n    axios\r\n      .get(URL, {\r\n        mode: \"no-cors\"\r\n      })\r\n      .then(contacts => {\r\n        let singleContact = contacts.data.filter(contact => contact.id === id);\r\n        this.setState(state => ({\r\n          singleContact: singleContact[0]\r\n        }));\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    let image = require('../img/userpic.jpg');\r\n    return (\r\n      <div className={this.state.showCard ? \"main-container-table main-container-background-grey\" : \"main-container-table\"}>\r\n        <div className=\"table-and-header\">\r\n          <div className=\"table-header-and-filter\">\r\n            <div className=\"table-header\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    {this.state.name &&\r\n                      <td className=\"table-header-name\">\r\n                        <div className=\"table-header-item\">Name\r\n              <label className=\"checkbox sort-by-name\">\r\n                            <input type=\"radio\" name=\"sortByName\" onClick={this.props.OnSortByName} />\r\n                            <FontAwesomeIcon icon=\"arrow-down\" />\r\n                          </label>\r\n                        </div>\r\n                      </td>\r\n                    }\r\n                    {this.state.city &&\r\n                      <td className=\"table-header-city\">\r\n                        <div className=\"table-header-item\">City</div>\r\n                      </td>\r\n                    }\r\n                    {this.state.email &&\r\n                      <td className=\"table-header-email\">\r\n                        <div className=\"table-header-item\">Email</div>\r\n                      </td>\r\n                    }\r\n                    {this.state.phone &&\r\n                      <td className=\"table-header-phone\">\r\n                        <div className=\"table-header-item\">Phone</div>\r\n                      </td>\r\n                    }\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n            <div className={this.state.showTableMenu ? \"table-columns-filter filter-background-white\" : \"table-columns-filter filter-background-aqua\"} >\r\n              <label className=\"checkbox\">\r\n                <input type=\"checkbox\" onClick={this.toggleTableMenu} />\r\n                <FontAwesomeIcon className=\"fa-bars\" icon=\"bars\" />\r\n              </label>\r\n              {this.state.showTableMenu &&\r\n                <div className=\"table-filter-menu\">\r\n                  <ul>\r\n                    <li>\r\n                      <label className=\"checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked={this.state.name} onChange={this.toggleName} />\r\n                        <FontAwesomeIcon className=\"fa-check\" icon=\"check\" /><p>Name</p>\r\n                      </label>\r\n                    </li>\r\n                    <li>\r\n                      <label className=\"checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked={this.state.city} onChange={this.toggleCity} />\r\n                        <FontAwesomeIcon className=\"fa-check\" icon=\"check\" /><p>City</p>\r\n                      </label>\r\n                    </li>\r\n                    <li>\r\n                      <label className=\"checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked={this.state.email} onChange={this.toggleEmail} />\r\n                        <FontAwesomeIcon className=\"fa-check\" icon=\"check\" /><p>Email</p>\r\n                      </label>\r\n                    </li>\r\n                    <li>\r\n                      <label className=\"checkbox\">\r\n                        <input type=\"checkbox\" defaultChecked={this.state.phone} onChange={this.togglePhone} />\r\n                        <FontAwesomeIcon className=\"fa-check\" icon=\"check\" /><p>Phone</p>\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n                </div>}\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"table-columns-all\">\r\n            <table>\r\n              <tbody>\r\n                <Contact singleContact={this.state.singleContact} OnContactClick={this.handleContactClick}\r\n                  showName={this.state.name}\r\n                  showCity={this.state.city}\r\n                  showEmail={this.state.email}\r\n                  showPhone={this.state.phone}\r\n                  contacts={this.props.contacts} />\r\n              </tbody>\r\n            </table >\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.showCard &&\r\n          <div className=\"main-container-card\">\r\n            <div className=\"card-top\"></div>\r\n            <div className=\"card\">\r\n              <div className=\"card-photo\"><img src={image.default} alt=\"userpic\" /></div>\r\n              <div className=\"card-description\">\r\n                <div className=\"card-description-item\">\r\n                  <div className=\"card-description-label\">Name:</div>\r\n                  <div className=\"card-description-info\">{this.state.singleContact.name} {this.state.singleContact.surname}</div>\r\n                </div>\r\n                <div className=\"card-description-item\">\r\n                  <div className=\"card-description-label\">City:</div>\r\n                  <div className=\"card-description-info\">{this.state.singleContact.city}</div>\r\n                </div>\r\n                <div className=\"card-description-item\">\r\n                  <div className=\"card-description-label\">Email:</div>\r\n                  <div className=\"card-description-info\">\r\n                    <a href={\"mailto:\" + this.state.singleContact.email}>{this.state.singleContact.email}</a>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-description-item\">\r\n                  <div className=\"card-description-label\">Phone:</div>\r\n                  <div className=\"card-description-info\">{this.state.singleContact.phone}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default ContactsTable;","import React, { Component } from \"react\"\r\n\r\nclass DynamicCitiesSelect extends Component {\r\n  constructor() {\r\n    super();\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n  }\r\n\r\n  onChangeCity(event) {\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    let { contacts } = this.props;\r\n    contacts = [{ \"city\": \"City\", \"id\": \"0\" }, ...contacts];\r\n    return (\r\n      <div>\r\n        {contacts && contacts.length > 0 && (\r\n          <select className=\"select header-main-item header-filter-city\" onChange={this.onChangeCity} name=\"city\">\r\n            {contacts.map((contact) => {\r\n              return <option key={contact.id}>{contact.city}</option>;\r\n            })}\r\n          </select>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicCitiesSelect;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport ContactsTable from './Components/ContactsTable';\nimport DynamicCitiesSelect from './Components/DynamicCitiesSelect'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheck, faEye } from '@fortawesome/free-solid-svg-icons'\nimport LoadingSpinner from 'react-loader-spinner'\n\nlibrary.add(fab, faCheck, faEye)\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      contacts: [],\n      error: undefined,\n      filteredContacts: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.fetchContacts = this.fetchContacts.bind(this)\n    this.sortByName = this.sortByName.bind(this)\n  }\n\n  componentDidMount() {\n    document.title = \"Contactify\";\n    this.fetchContacts();\n    this.matchState();\n  }\n\n  matchState() {\n    this.setState({\n      filteredContacts: this.state.contacts\n    });\n  }\n\n  fetchContacts() {\n    const URL = \"https://contactify-api.herokuapp.com/api/contacts\";\n    axios\n      .get(URL, {\n        mode: \"no-cors\"\n      })\n      .then(contacts => {\n        this.setState(state => ({\n          loading: false,\n          contacts: contacts.data\n        }));\n        this.matchState();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const name = event.target.elements.name.value.toLowerCase();\n    const city = event.target.elements.city.value;\n    const showActive = event.target.elements.showActive.checked;\n\n    if (!showActive) {\n      //filter by name && city\n      if (name && city !== 'City') {\n        this.setState({\n          filteredContacts: this.state.contacts.filter(\n            contact =>\n              (contact.name.toLowerCase().includes(name) || contact.surname.toLowerCase().includes(name))\n              &&\n              contact.city.includes(city)\n          )\n        })\n        //filter by name only\n      } else if (name && city === \"City\") {\n        this.setState({\n          filteredContacts: this.state.contacts.filter(\n            contact =>\n              (contact.name.toLowerCase().includes(name) || contact.surname.toLowerCase().includes(name))\n          )\n        })\n        //filter by city only\n      } else if (!name && city !== \"City\") {\n        this.setState({\n          filteredContacts: this.state.contacts.filter(\n            contact =>\n              contact.city.includes(city)\n          )\n        })\n        //return all contacts\n      } else if (!name && city === \"City\") {\n        console.log(\"return all contacts please\");\n        this.matchState();\n      }\n      //show active by name and city\n    } else if (name && city !== 'City') {\n      this.setState({\n        filteredContacts: this.state.contacts.filter(\n          contact =>\n            (contact.name.toLowerCase().includes(name) || contact.surname.toLowerCase().includes(name))\n            &&\n            contact.city.includes(city)\n            &&\n            contact.isActive\n        )\n      })\n      //show active by name only\n    } else if (name && city === \"City\") {\n      this.setState({\n        filteredContacts: this.state.contacts.filter(\n          contact =>\n            (contact.name.toLowerCase().includes(name) || contact.surname.toLowerCase().includes(name))\n            &&\n            contact.isActive\n        )\n      })\n      //show active by city only\n    } else if (!name && city !== \"City\") {\n      this.setState({\n        filteredContacts: this.state.contacts.filter(\n          contact =>\n            contact.city.includes(city)\n            &&\n            contact.isActive\n        )\n      })\n      //show all active\n    } else if (!name && city === \"City\") {\n      this.setState({\n        filteredContacts: this.state.contacts.filter(\n          contact =>\n            contact.isActive\n        )\n      })\n    }\n  }\n\n  sortByName() {\n    this.setState({\n      filteredContacts: this.state.filteredContacts.sort((a, b) => a.name.localeCompare(b.name))\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"header\">\n          <div className=\"header-main\">\n\n            <form onSubmit={this.handleSubmit}>\n              <input className=\"header-main-item header-filter-name\" type=\"text\" placeholder=\"Name\" name=\"name\" />\n              <DynamicCitiesSelect selectedCity={this.state.selectedCity} contacts={this.state.contacts} />\n              <label className=\"checkbox header-main-item header-filter-active\">\n                <input type=\"checkbox\" name=\"showActive\" />\n                <FontAwesomeIcon className=\"fa-check\" icon=\"check\" />\n                <p className=\"header-filter-active-label\">\n                  Show active &nbsp;\n                  <FontAwesomeIcon className=\"fa-eye\" icon=\"eye\" />\n                </p>\n              </label>\n              <input className=\"header-main-item button\" type=\"submit\" value=\"FILTER\" />\n            </form>\n\n          </div>\n          <div className=\"header-logo\">CONTACTIFY</div>\n        </div>\n        {this.state.loading ?\n          <div className=\"loader\"><LoadingSpinner type=\"ThreeDots\" color=\"#4EB7BE\" height=\"100\" width=\"100\" /></div> :\n          <ContactsTable OnSortByName={this.sortByName} contacts={this.state.filteredContacts} />\n        }\n      </div>\n    );\n\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}